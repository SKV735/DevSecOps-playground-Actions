name: Horusec SAST scan
on: workflow_dispatch
permissions: 
  contents: read
  issues: write

jobs:
  horusec-sast-scan:
    runs-on: ubuntu-latest
    name: Horusec SAST scan
    steps:
      - uses: actions/checkout@v3

      - name: Run Horusec sonarqube log
        id: run_horusec_sq
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -p="./" -e="false" -o="sonarqube" -O="horusec-output_sq.json" --enable-owasp-dependency-check="true" --enable-shellcheck="true" --information-severity="true"

      - name: Run Horusec custom log
        id: run_horusec_json
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -c="horusec-config.json" -p="./" -e="false" -w="true" -j="true" -o="json" -O="horusec-output_json.json"
          
            
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: horusec-report-sq
          path: horusec-output_sq.json
          retention-days: 5

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: horusec-report-json
          path: horusec-output_json.json
          retention-days: 5

  download-artifacts-e-create-issue:
    runs-on: ubuntu-latest
    needs: horusec-sast-scan  #wait for the artifacts
    name: download-artifacts-e-create-issue
    steps:
      - uses: actions/checkout@v3

      - name: Download the artifact
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: horusec-report-json

      - name: Download the artifact
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: horusec-report-sq
      
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: HORUSEC ISSUE
          body: link to the report ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
      #- name: Print the json result
      #  id: stampalog
      #  shell: bash
      #  run: |
      #    value=`cat horusec-output.json && cat horusec`
      #    echo The result is $value
          
      #- name: Convert JSON to Markdown
      #  uses: buildingcash/json-to-markdown-table-action@v1
      #  with:
      #    json: ${{ env.horusec-output }}

      #- name: Rename file .json to .md e print it
      #  run: |
      #    mv ./output.json ./output.md
      #    ls
      #    value=`cat ./output.md`
      #    echo The result is $value

      #- name: Delete file 
      #  run: rm -f file.txt

      #- name: stampa json
      #  run: echo "${{ steps.stampalog.outputs }}"

      #Test Json to table md
      #- uses: buildingcash/json-to-markdown-table-action@v1
      #  id: table
      #  with:
      #    json: ${{ steps.stampalog.outputs }}
      #- run: echo ${{ steps.table.outputs.table }}

#      - name: Create Issue From File
 #       id: horusec-issue-sq
  #      uses: peter-evans/create-issue-from-file@v4
   #     with:
    #      title: Horusec output SQ
     #     content-filepath: horusec-output_sq.json
      #    labels: |
       ##     report
         #   automated issue

#      - name: Create Issue From File
 #       id: horusec-issue-json
  #      uses: peter-evans/create-issue-from-file@v4
   #     with:
    #      title: Horusec output Json
     #     content-filepath: horusec-output_json.json
      #    labels: |
       #     report
        #    automated issue
    

    
  
