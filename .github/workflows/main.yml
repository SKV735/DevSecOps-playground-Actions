name: SAST, SCA, Secrets & DAST security scans
#on: push #Sostituito da workflow dispatch, avviabile manualmente dalle Actions
on: workflow_dispatch

permissions: 
  contents: read
  packages: read
  issues: write

jobs:
  horusec-sast-scan:
    runs-on: ubuntu-latest
    name: Horusec security scan (SAST + SCA)
    steps:
      - uses: actions/checkout@v3

      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Horusec security scan
        run: |
          for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo service docker start
          sudo docker run hello-world
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
          sudo horusec version
          sudo horusec start --config-file-path=horusec-config.json -p="./" -e="false" --enable-owasp-dependency-check="true" --enable-shellcheck="true" --information-severity="true"  -o="json" -O="horusec-output_json.json"
          

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: horusec-report-json
          path: horusec-output_json.json
          retention-days: 5

  download-artifacts-e-create-issue:
    runs-on: ubuntu-latest
    needs: horusec-sast-scan  #wait for the artifacts
    name: download-artifacts-e-create-issue
    steps:
      - uses: actions/checkout@v3

      - name: Download the artifact
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: horusec-report-json
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Horusec scan report
          body: link to the report ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  sonarcloud-sast-scan:
    runs-on: ubuntu-latest
    needs: horusec-sast-scan
    name: SonarCloud SAST scan
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven cloud
      run:  mvn -B verify sonar:sonar -Dsonar.projectKey=devsecops-playground_playground -Dsonar.organization=devsecops-playground -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  snyk-sca-scan:
    runs-on: ubuntu-latest
    needs: sonarcloud-sast-scan
    name: Snyk SCA scan
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  debricked-sca-scan:
    runs-on: ubuntu-latest
    needs: sonarcloud-sast-scan
    name: Debricked SCA CLI
    steps:
      - uses: actions/checkout@v3
      - uses: debricked/actions@v3
     # - uses: debricked/actions/scan-non-docker@v3  #NON docker actions
     # - uses: debricked/actions/resolve@v3
     # - uses: debricked/actions/resolve-non-docker@v3  #NON docker actions
        env:
          DEBRICKED_TOKEN: ${{ secrets.DEBRICKED_TOKEN }}
          
  gitguardian-secrets-scan:
    name: GitGuardian Secrets scan
    runs-on: ubuntu-latest
    needs: snyk-sca-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned. Utile anche per Sonarcloud
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.18.1
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA:  ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          
  zap-dast-scan:
    runs-on: ubuntu-latest
    needs: sonarcloud-sast-scan
    name: ZAP DAST scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://testphp.vulnweb.com/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          
  nuclei-dast-scan:
    runs-on: ubuntu-latest
    needs: sonarcloud-sast-scan
    steps:
      - uses: actions/checkout@v2
      
      - name: Nuclei DAST Scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: https://example.com
          #urls: urls.txt
          flags: "-severity critical,high,medium,low -stats"
          github-report: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: GitHub Workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuclei.log
          path: nuclei.log
      
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: NUCLEI ISSUE
          body: link to the report ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: GitHub Security Dashboard Alerts update
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: nuclei.sarif