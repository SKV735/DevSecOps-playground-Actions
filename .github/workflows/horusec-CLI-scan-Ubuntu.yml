name: Horusec CLI security scan Ubuntu
on: workflow_dispatch
permissions: 
  contents: read
  packages: read
  issues: write

jobs:
  horusec-sast-scan:
    runs-on: ubuntu-latest
    name: Horusec security scan (SAST + SCA)
    steps:
      - uses: actions/checkout@v3

      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Horusec security scan
        run: |
          for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo service docker start
          sudo docker run hello-world
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
          sudo horusec version
          sudo horusec start --config-file-path=horusec-config.json -p="./" -e="false" --enable-owasp-dependency-check="true" --enable-shellcheck="true" --information-severity="true"  -o="json" -O="horusec-output_json.json"
          

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: horusec-report-json
          path: horusec-output_json.json
          retention-days: 5

  download-artifacts-e-create-issue:
    runs-on: ubuntu-latest
    needs: horusec-sast-scan  #wait for the artifacts
    name: download-artifacts-e-create-issue
    steps:
      - uses: actions/checkout@v3

      - name: Download the artifact
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: horusec-report-json
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Horusec scan report
          body: link to the report ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
